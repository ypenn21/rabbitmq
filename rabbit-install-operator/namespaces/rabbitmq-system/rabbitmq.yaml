---
apiVersion: rabbitmq.com/v1beta1
kind: RabbitmqCluster
metadata:
  name: rabbitmqcluster
spec:
  image: rabbitmq:3.10.2-management
  replicas: 1
  service:
    type: LoadBalancer # ClusterIP | LoadBalancer
#   resources:
#     requests:
      # cpu: 3000m
#       memory: 512Mi
    # limits:
    #   cpu: 1000m
    #   memory: 2Gi
  rabbitmq:
    additionalConfig: |
                  log.console.level = info
                  channel_max = 700
                  default_user= guest 
                  default_pass = guest
                  default_user_tags.administrator = true
    advancedConfig: | 
               [
                  {rabbitmq_shovel,
                     [{shovels,
                       [%% A named shovel worker.
                        {my_test_shovel,
                         [

                      %  List the source broker(s) from which to consume.

                          {sources,
                           [%% URI(s) and pre-declarations for all source broker(s).
                           {brokers, ["amqp://guest:guest@rabbitmqcluster:5672"]},
                            {declarations, [
                                {'exchange.declare',
                                   [ {exchange, <<"shovel_exchange">>},
                                   {type, <<"direct">>},
                                   durable
                                   ]},
                               {'queue.declare',
                                   [{queue,    <<"shovel_outcome_queue">>},durable]},
                               {'queue.bind',
                                   [ {exchange, <<"shovel_exchange">>},
                                   {queue,    <<"shovel_outcome_queue">>},
                                   {routing_key, <<"shovel_key">>}
                                   ]}
                            ]}
                           ]},

                      %  List the destination broker(s) to publish to. 10.0.0.10 is a vm with rabbit installed in gce
                          {destinations,
                           [%% A singular version of the 'brokers' element.
                           {broker, "amqp://admin:securepassword@10.0.0.10:5672"},
                            {declarations, [{'exchange.declare',
                                               [ {exchange, <<"shovel_exchange">>},
                                               {type, <<"direct">>},
                                               durable
                                               ]},
                                           {'queue.declare',
                                               [{queue,    <<"shovel_income_queue">>},durable]},
                                           {'queue.bind',
                                               [ {exchange, <<"shovel_exchange">>},
                                               {queue,    <<"shovel_income_queue">>},
                                               {routing_key, <<"shovel_key">>}
                                               ]}]}
                           ]},

                      %  Name of the queue to shovel messages from.

                        {queue, <<"shovel_outcome_queue">>},

                      %  Optional prefetch count.

                        {prefetch_count, 10},

                      %  when to acknowledge messages:
                       %  - no_ack: never (auto)
                       %  - on_publish: after each message is republished
                       %  - on_confirm: when the destination broker confirms receipt

                        {ack_mode, no_ack},

                      %  Overwrite fields of the outbound basic.publish.

                        {publish_fields, [{exchange,    <<"shovel_exchange">>},
                                          {routing_key, <<"shovel_key">>}]},

                      %  Static list of basic.properties to set on re-publication.

                        {publish_properties, [{delivery_mode, 2}]},

                      %  The number of seconds to wait before attempting to
                       %  reconnect in the event of a connection failure.

                        {reconnect_delay, 2.5}

                       ]} %% End of my_first_shovel
                       ]}
                      %% Rather than specifying some values per-shovel, you can specify
                      %% them for all shovels here.
                      %%
                      %% {defaults, [{prefetch_count,     0},
                      %%             {ack_mode,           on_confirm},
                      %%             {publish_fields,     []},
                      %%             {publish_properties, [{delivery_mode, 2}]},
                      %%             {reconnect_delay,    2.5}]}
                    ]},

                    {rabbitmq_auth_backend_ldap, [
                      %%
                      %% Authorisation
                      %% =============
                      %%

                      %% The LDAP plugin can perform a variety of queries against your
                      %% LDAP server to determine questions of authorisation. See
                      %% https://www.rabbitmq.com/ldap.html#authorisation for more
                      %% information.

                      %% Set the query to use when determining vhost access
                      %%
                      %% {vhost_access_query, {in_group,
                      %%                       "ou=${vhost}-users,ou=vhosts,dc=example,dc=com"}},

                      %% Set the query to use when determining resource (e.g., queue) access
                      %%
                      %% {resource_access_query, {constant, true}},

                      %% Set queries to determine which tags a user has
                      %%
                      %% {tag_queries, []}
                    ]}
               ].
    additionalPlugins:
      - rabbitmq_shovel
#                   additionalConfig:
#                     description: Modify to add to the rabbitmq.conf file in addition to default configurations set by the operator. Modifying this property on an existing RabbitmqCluster will trigger a StatefulSet rolling restart and will cause rabbitmq downtime. For more information on this config, see https://www.rabbitmq.com/configure.html#config-file
#                     maxLength: 2000
#                     type: string
#                   additionalPlugins:
#                     description: 'List of plugins to enable in addition to essential plugins: rabbitmq_management, rabbitmq_prometheus, and rabbitmq_peer_discovery_k8s.'
#                     items:
#                       description: A Plugin to enable on the RabbitmqCluster.
#                       maxLength: 100
#                       pattern: ^\w+$
#                       type: string
#                     maxItems: 100
#                     type: array
#                   advancedConfig:
#                     description: Specify any rabbitmq advanced.config configurations to apply to the cluster. For more information on advanced config, see https://www.rabbitmq.com/configure.html#advanced-config-file
#                     maxLength: 100000
#                     type: string
#                   envConfig:
#                     description: Modify to add to the rabbitmq-env.conf file. Modifying this property on an existing RabbitmqCluster will trigger a StatefulSet rolling restart and will cause rabbitmq downtime. For more information on env config, see https://www.rabbitmq.com/man/rabbitmq-env.conf.5.html
#                     maxLength: 100000
#                     type: string
  persistence:
    storageClassName: local-path
    storage: 5Gi
